-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer

-- UI Library Import
local lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = lib.CreateLib("Grow a Garden | Kondax Panel", "Ocean")

local noclip = false
RunService.Stepped:Connect(function()
    if noclip and player.Character then
        for _, part in ipairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end)

local function teleportTo(pos)
    local char = player.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        char.HumanoidRootPart.CFrame = CFrame.new(pos)
    end
end

local tabMain = Window:NewTab("Jardinage")
local sectionFarm = tabMain:NewSection("Fonctions Générales")

sectionFarm:NewButton("TP au jardin", "Téléporte au centre du jardin", function()
    teleportTo(Vector3.new(0, 3, 0)) -- adapte si besoin
end)

-- Trouver la graine "Carrot Seed" dans Backpack ou Character (main)
local function findSeed()
    local containers = {player.Backpack, player.Character}
    for _, container in ipairs(containers) do
        if container then
            for _, tool in ipairs(container:GetChildren()) do
                if tool:IsA("Tool") and tool.Name:match("^Carrot Seed") then
                    return tool
                end
            end
        end
    end
    return nil
end

-- Récupérer les 2 spots plantables (parts) dans workspace
local function getPlantSpots()
    local spots = {}
    local base = workspace.Farm.Farm.Important.Plant_Locations
    local children = base:GetChildren()
    for _, child in ipairs(children) do
        if child:IsA("BasePart") then
            table.insert(spots, child)
            if #spots >= 2 then break end
        end
    end
    return spots
end

-- Trouver un ClickDetector sur la part plantable
local function getClickDetector(part)
    for _, child in ipairs(part:GetChildren()) do
        if child:IsA("ClickDetector") then
            return child
        end
    end
    return nil
end

sectionFarm:NewButton("Auto Plant 'Carrot Seed'", "Prend la graine en main et plante sur un spot", function()
    local seed = findSeed()
    if not seed then
        warn("Carrot Seed non trouvée dans le Backpack ni en main.")
        return
    end

    -- Met la graine en main
    seed.Parent = player.Character
    task.wait(0.2)

    -- Récupère les emplacements
    local spots = getPlantSpots()
    local planted = false

    for _, spot in ipairs(spots) do
        local clickDetector = getClickDetector(spot)
        if clickDetector then
            -- Téléporte le joueur au-dessus du spot
            teleportTo(spot.Position + Vector3.new(0, 3, 0))
            task.wait(0.3)
            -- Simule le clic pour planter
            clickDetector:FireClick(player.Character or player)
            print("Planté à l'emplacement:", spot.Name)
            planted = true
            break
        end
    end

    if not planted then
        warn("Aucun emplacement plantable avec ClickDetector trouvé.")
    end
end)

-- ESP basique
local tabESP = Window:NewTab("ESP")
local sectionESP = tabESP:NewSection("Visualisation")

local espEnabled = false
local activeESP = {}

local function clearESP()
    for _, v in ipairs(activeESP) do
        if v and v.Parent then
            v:Destroy()
        end
    end
    activeESP = {}
end

local function createESP(target)
    if not target.Character then return end
    local char = target.Character
    local color = Color3.fromRGB(0, 255, 0)

    for _, part in ipairs(char:GetChildren()) do
        if part:IsA("BasePart") then
            local adorn = Instance.new("BoxHandleAdornment")
            adorn.Adornee = part
            adorn.Size = part.Size + Vector3.new(0.1, 0.1, 0.1)
            adorn.Color3 = color
            adorn.Transparency = 0.5
            adorn.AlwaysOnTop = true
            adorn.ZIndex = 10
            adorn.Parent = part
            table.insert(activeESP, adorn)
        end
    end

    local head = char:FindFirstChild("Head")
    if head then
        local tag = Instance.new("BillboardGui", head)
        tag.Adornee = head
        tag.Size = UDim2.new(0, 100, 0, 20)
        tag.StudsOffset = Vector3.new(0, 2, 0)
        tag.AlwaysOnTop = true

        local txt = Instance.new("TextLabel", tag)
        txt.Size = UDim2.new(1, 0, 1, 0)
        txt.BackgroundTransparency = 1
        txt.Text = target.Name
        txt.TextColor3 = color
        txt.Font = Enum.Font.GothamBold
        txt.TextScaled = true

        table.insert(activeESP, tag)
    end
end

sectionESP:NewToggle("Activer ESP", "Montre les autres joueurs", function(state)
    espEnabled = state
    clearESP()
    if espEnabled then
        for _, p in pairs(Players:GetPlayers()) do
            if p ~= player then
                createESP(p)
            end
        end
    end
end)

-- Toggle UI (touche K)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.K then
        lib:ToggleUI()
    end
end)
