-- KXScript | Raise Animals - FULL v_final (All features, multi-toggle)
-- Features: webhook embed (via executor), buy all, autobuy, scan/apply speed, stable async, ESP, TP/Swap, retry on ragdoll.

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

-- UI lib
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/UI-Libs/main/discord%20lib.txt"))()
local win = Library:Window("KXScript |[ðŸŽ‰] Raise Animals")
local player = Players.LocalPlayer

-- ----------------- small cleanup -----------------
pcall(function()
    local gui = player:FindFirstChild("PlayerGui")
    if gui then
        local g = gui:FindFirstChild("Game")
        if g and g:FindFirstChild("Distance") then
            g.Distance:Destroy()
        end
    end
end)

-- ----------------- Timer & Money UI -----------------
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "KXScriptTimer"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local timerLabel = Instance.new("TextLabel")
timerLabel.Size = UDim2.new(0,320,0,30)
timerLabel.Position = UDim2.new(1,-330,0,8)
timerLabel.BackgroundTransparency = 1
timerLabel.TextColor3 = Color3.fromRGB(0,255,0)
timerLabel.TextScaled = true
timerLabel.Font = Enum.Font.GothamBold
timerLabel.Parent = screenGui

local moneyLabel = Instance.new("TextLabel")
moneyLabel.Size = UDim2.new(0,320,0,30)
moneyLabel.Position = UDim2.new(1,-330,0,44)
moneyLabel.BackgroundTransparency = 1
moneyLabel.TextColor3 = Color3.fromRGB(0,255,0)
moneyLabel.TextScaled = true
moneyLabel.Font = Enum.Font.GothamBold
moneyLabel.Parent = screenGui

local startTime = os.time()
local leaderstats = player:FindFirstChild("leaderstats")
local moneyStat = leaderstats and leaderstats:FindFirstChild("Money") or nil
local startMoney = (moneyStat and moneyStat.Value) or 0
local totalGained = 0
if moneyStat then
    moneyStat.Changed:Connect(function()
        totalGained = moneyStat.Value - startMoney
    end)
end

-- âœ… Discord popup (fix affichage + bouton)
local function showDiscordPopup()
    local playerGui = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
    local gui = Instance.new("ScreenGui")
    gui.Name = "DiscordPopup"
    gui.ResetOnSpawn = false
    gui.IgnoreGuiInset = true
    gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    gui.Parent = playerGui

    -- Background semi-transparent
    local bg = Instance.new("Frame", gui)
    bg.Size = UDim2.new(1, 0, 1, 0)
    bg.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    bg.BackgroundTransparency = 0.5
    bg.ZIndex = 9

    -- Main frame
    local frame = Instance.new("Frame", bg)
    frame.Size = UDim2.new(0, 420, 0, 180)
    frame.Position = UDim2.new(0.5, -210, 0.5, -90)
    frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    frame.BorderSizePixel = 0
    frame.Active = true
    frame.Draggable = true
    frame.ZIndex = 10

    local corner = Instance.new("UICorner", frame)
    corner.CornerRadius = UDim.new(0, 12)

    local title = Instance.new("TextLabel", frame)
    title.Size = UDim2.new(1, 0, 0, 40)
    title.BackgroundTransparency = 1
    title.Font = Enum.Font.GothamBold
    title.Text = "ðŸŽ‰ Join the Discord!"
    title.TextSize = 22
    title.TextColor3 = Color3.fromRGB(0, 255, 0)
    title.ZIndex = 11

    local text = Instance.new("TextLabel", frame)
    text.Size = UDim2.new(1, -40, 0, 80)
    text.Position = UDim2.new(0, 20, 0, 50)
    text.BackgroundTransparency = 1
    text.Font = Enum.Font.Gotham
    text.TextWrapped = true
    text.TextColor3 = Color3.fromRGB(255, 255, 255)
    text.TextSize = 18
    text.ZIndex = 11
    text.Text = "join the discord to know the next update and support!\n\nðŸ”— discord.gg/ebx27uMNBM"

    local okButton = Instance.new("TextButton", frame)
    okButton.Size = UDim2.new(0, 120, 0, 35)
    okButton.Position = UDim2.new(0.5, -60, 1, -50)
    okButton.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
    okButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    okButton.Font = Enum.Font.GothamBold
    okButton.Text = "OK"
    okButton.TextSize = 18
    okButton.ZIndex = 11

    local okCorner = Instance.new("UICorner", okButton)
    okCorner.CornerRadius = UDim.new(0, 8)

    okButton.MouseButton1Click:Connect(function()
        gui:Destroy()
    end)
end

-- ðŸ‘‡ Appel du popup
showDiscordPopup()

task.spawn(function()
    while true do
        local elapsed = os.time() - startTime
        local h = math.floor(elapsed/3600)
        local m = math.floor((elapsed%3600)/60)
        local s = elapsed%60
        timerLabel.Text = string.format("Runtime: %02d:%02d:%02d | %s", h,m,s, os.date("%H:%M:%S"))
        moneyLabel.Text = "Total Money Gained: "..tostring(totalGained)
        task.wait(1)
    end
end)

-- ----------------- HTTP / Webhook helper (executor-friendly) -----------------
local function executor_http_request(req)
    -- req should be a table with Url, Method, Headers, Body
    if type(syn) == "table" and syn.request then
        return syn.request(req)
    elseif (type(http_request) == "function") then
        return http_request(req)
    elseif (type(http) == "table" and http.request) then
        return http.request(req)
    elseif (type(request) == "function") then
        return request(req)
    else
        error("no executor http function available")
    end
end

local function post_json_best_effort(url, payload)
    local body = HttpService:JSONEncode(payload)
    -- try executor
    local ok, res = pcall(function()
        return executor_http_request({Url = url, Method = "POST", Headers = {["Content-Type"]="application/json"}, Body = body})
    end)
    if ok and res then
        return true, res
    end
    -- fallback HttpService:PostAsync if allowed
    local ok2, err2 = pcall(function()
        if HttpService.HttpEnabled then
            HttpService:PostAsync(url, body, Enum.HttpContentType.ApplicationJson)
            return true
        else
            error("HttpService.HttpEnabled is false")
        end
    end)
    if ok2 then return true, true end
    return false, (res or err2)
end

local webhook_url = "" -- fill via UI or paste your webhook here
local function sendWebhookEmbed(title, fieldsTable, color, username)
    if not webhook_url or webhook_url == "" then
        warn("[KXScript] webhook not set. Embed:", title, fieldsTable)
        return false, "no_webhook"
    end
    local embed = {
        title = title or "KXScript",
        color = color or 65280, -- default green
        fields = {},
        timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
    }
    for _, f in ipairs(fieldsTable or {}) do
        table.insert(embed.fields, {
            name = f.name or "field",
            value = (f.value == nil and "nil" or tostring(f.value)),
            inline = f.inline and true or false
        })
    end
    local payload = {
        username = username or "KXScript",
        embeds = { embed }
    }
    local ok, res = pcall(post_json_best_effort, webhook_url, payload)
    if not ok or not res then
        warn("[KXScript] webhook embed failed:", res)
        return false, res
    end
    return true, res
end

-- UI for webhook
local miscServer = win:Server("Misc", "")
local webhookChannel = miscServer:Channel("Webhook")
webhookChannel:Textbox("Discord Webhook URL", "Paste webhook URL (executor-compatible)", false, function(txt) webhook_url = tostring(txt or "") end)
webhookChannel:Button("Send Test Embed", function()
    task.spawn(function()
        local fields = {
            {name="Player", value=player.Name, inline=true},
            {name="Runtime", value=string.format("%02d:%02d:%02d", math.floor((os.time()-startTime)/3600), math.floor((os.time()-startTime)%3600/60), (os.time()-startTime)%60), inline=true},
            {name="Time", value=os.date("%H:%M:%S"), inline=true},
            {name="Money Gained", value=tostring(totalGained), inline=true}
        }
        local ok, err = sendWebhookEmbed("KXScript Test", fields, 3066993, "KXScript")
        if ok then print("Embed sent OK") else warn("Embed failed:", err) end
    end)
end)

-- ----------------- Shop helpers (safe remote) -----------------
local function safeFireRemote(pathTbl, argsTbl)
    local ok, err = pcall(function()
        local node = ReplicatedStorage
        for _, name in ipairs(pathTbl) do node = node:WaitForChild(name, 5) end
        node:FireServer(unpack(argsTbl))
    end)
    return ok, err
end

local function safeBuyFood(itemName, buyAll)
    local args
    if buyAll then
        args = {"Food", { BuyAll = true, ItemName = itemName }}
    else
        args = {"Food", { ItemName = itemName }}
    end
    return safeFireRemote({"Remote","Shop","Buy"}, args)
end

local function safeBuyPet(itemName, buyAll)
    local args
    if buyAll then
        args = {"Animal", { BuyAll = true, ItemName = itemName }}
    else
        args = {"Animal", { ItemName = itemName }}
    end
    return safeFireRemote({"Remote","Shop","Buy"}, args)
end

-- ----------------- Food & Pets UI (all toggles) -----------------
local foodServer = win:Server("Food Shop", "")
local foodChannel = foodServer:Channel("Food")
local foodItems = {"Wheat","Corn","Pumpkin","Carrot","Raw Meat","Cocoa","Fish","Milk","Biscuit","Egg"}
local selectedFood = {}
for _, f in ipairs(foodItems) do
    selectedFood[f] = false
    foodChannel:Toggle(f, false, function(state) selectedFood[f] = state end)
end
foodChannel:Button("Buy Selected Food(s) (normal)", function()
    task.spawn(function()
        for name, enabled in pairs(selectedFood) do
            if enabled then
                local ok,_ = safeBuyFood(name, false)
                pcall(function() sendWebhookEmbed("Buy Food", {{name="Item",value=name},{name="Result",value=ok and "OK" or "Failed"}}, 3066993, "KXScript") end)
                task.wait(0.05)
            end
        end
    end)
end)
foodChannel:Button("Buy Selected Food(s) (BuyAll)", function()
    task.spawn(function()
        for name, enabled in pairs(selectedFood) do
            if enabled then
                local ok,_ = safeBuyFood(name, true)
                pcall(function() sendWebhookEmbed("BuyAll Food", {{name="Item",value=name},{name="Result",value=ok and "OK" or "Failed"}}, 3447003, "KXScript") end)
                task.wait(0.05)
            end
        end
    end)
end)

local petsServer = win:Server("Pets Shop", "")
local petsChannel = petsServer:Channel("Animals")
local pets = {"Snake","Buffalo","Ostrich","Zebra","Moose","Yak","Toucan","Tiger","Penguin","Elephant","Giraffe","Walrus","Gorilla","Polar Bear","Crocodile","Lion","Narwhal"}
local selectedPets = {}
for _, p in ipairs(pets) do
    selectedPets[p] = false
    petsChannel:Toggle(p, false, function(state) selectedPets[p] = state end)
end
petsChannel:Button("Buy Selected Pet(s) (normal)", function()
    task.spawn(function()
        for name, enabled in pairs(selectedPets) do
            if enabled then
                local ok,_ = safeBuyPet(name, false)
                pcall(function() sendWebhookEmbed("Buy Pet", {{name="Item",value=name},{name="Result",value=ok and "OK" or "Failed"}}, 3066993, "KXScript") end)
                task.wait(0.05)
            end
        end
    end)
end)
petsChannel:Button("Buy Selected Pet(s) (BuyAll)", function()
    task.spawn(function()
        for name, enabled in pairs(selectedPets) do
            if enabled then
                local ok,_ = safeBuyPet(name, true)
                pcall(function() sendWebhookEmbed("BuyAll Pet", {{name="Item",value=name},{name="Result",value=ok and "OK" or "Failed"}}, 3447003, "KXScript") end)
                task.wait(0.05)
            end
        end
    end)
end)

-- ----------------- AutoBuy (every 5 minutes) -----------------
local autoBuyEnabled = false
local autoBuyThread = nil
local function startAutoBuyLoop()
    if autoBuyThread then return end
    autoBuyThread = task.spawn(function()
        while autoBuyEnabled do
            -- Foods
            for name, enabled in pairs(selectedFood) do
                if enabled then
                    pcall(function() safeBuyFood(name, true) end)
                    task.wait(0.05)
                end
            end
            -- Pets
            for name, enabled in pairs(selectedPets) do
                if enabled then
                    pcall(function() safeBuyPet(name, true) end)
                    task.wait(0.05)
                end
            end
            -- send notification
            pcall(function() sendWebhookEmbed("AutoBuy executed", {
                {name="Player", value=player.Name},
                {name="Time", value=os.date("%Y-%m-%d %H:%M:%S")},
                {name="Money Gained", value=tostring(totalGained)}
            }, 10181046, "KXScript") end)
            -- wait 5 minutes
            local waited = 0
            while waited < 300 and autoBuyEnabled do
                task.wait(1)
                waited = waited + 1
            end
        end
        autoBuyThread = nil
    end)
end

local autoBuyChannel = miscServer:Channel("AutoBuy")
autoBuyChannel:Toggle("AutoBuy every 5 minutes", false, function(state)
    autoBuyEnabled = state
    if state then startAutoBuyLoop() else autoBuyThread = nil end
end)
autoBuyChannel:Button("Buy All Selected (now)", function()
    task.spawn(function()
        for name, enabled in pairs(selectedFood) do if enabled then pcall(function() safeBuyFood(name,true) end); task.wait(0.05) end end
        for name, enabled in pairs(selectedPets) do if enabled then pcall(function() safeBuyPet(name,true) end); task.wait(0.05) end end
    end)
end)

-- ----------------- Play / Retry UI -----------------
local playServer = win:Server("Play", "")
local playChannel = playServer:Channel("Game")
playChannel:Button("Retry Game", function()
    task.spawn(function()
        pcall(function() ReplicatedStorage:WaitForChild("Remote"):WaitForChild("Game"):WaitForChild("Retry"):FireServer() end)
    end)
end)

-- ----------------- ESP (robust + live dist) -----------------
local espServer = win:Server("Animal ESP", "")
local espChannel = espServer:Channel("Overlay")
local espFolder = Instance.new("Folder", player:WaitForChild("PlayerGui"))
espFolder.Name = "AnimalESPFolder"
local espObjects = {}

local function createBillboardFor(animal)
    if not animal or not animal:IsA("Model") then return end
    if espObjects[animal] then return end
    local head = animal:FindFirstChild("Head") or animal:FindFirstChildWhichIsA("BasePart")
    if not head then return end
    local billboard = Instance.new("BillboardGui")
    billboard.Adornee = head
    billboard.Size = UDim2.new(0,220,0,48)
    billboard.StudsOffset = Vector3.new(0,3,0)
    billboard.AlwaysOnTop = true
    local nameLabel = Instance.new("TextLabel", billboard)
    nameLabel.Size = UDim2.new(1, -8, 0.5, -4)
    nameLabel.Position = UDim2.new(0,4,0,2)
    nameLabel.BackgroundTransparency = 1
    nameLabel.TextScaled = true
    nameLabel.Font = Enum.Font.GothamBold
    nameLabel.TextColor3 = Color3.fromRGB(255,0,128)
    nameLabel.Text = tostring(animal.Name)
    local distLabel = Instance.new("TextLabel", billboard)
    distLabel.Size = UDim2.new(1, -8, 0.5, -4)
    distLabel.Position = UDim2.new(0,4,0.5,0)
    distLabel.BackgroundTransparency = 1
    distLabel.TextScaled = true
    distLabel.Font = Enum.Font.GothamBold
    distLabel.TextColor3 = Color3.fromRGB(0,255,64)
    distLabel.Text = "Dist: ?"
    billboard.Parent = espFolder
    espObjects[animal] = {billboard=billboard, name=nameLabel, dist=distLabel, head=head}
end

local function removeBillboardFor(animal)
    local obj = espObjects[animal]
    if obj and obj.billboard then pcall(function() obj.billboard:Destroy() end) end
    espObjects[animal] = nil
end

local function refreshAllESP()
    for model,_ in pairs(espObjects) do
        if not model.Parent then removeBillboardFor(model) end
    end
    local animalsFolder = Workspace:FindFirstChild("Animals")
    if not animalsFolder then return end
    local modelsFolder = animalsFolder:FindFirstChild("ClientModels")
    if not modelsFolder then return end
    for _, model in pairs(modelsFolder:GetChildren()) do
        if model:IsA("Model") then createBillboardFor(model) end
    end
end

task.spawn(function()
    while true do
        for model, info in pairs(espObjects) do
            local head = info.head
            if head and head.Parent and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local dist = (player.Character.HumanoidRootPart.Position - head.Position).Magnitude
                info.dist.Text = string.format("Dist: %.1f", dist)
            else
                removeBillboardFor(model)
            end
        end
        task.wait(0.25)
    end
end)

espChannel:Toggle("Show Animal ESP", false, function(state)
    if state then
        refreshAllESP()
        pcall(function()
            if Workspace:FindFirstChild("Animals") and Workspace.Animals:FindFirstChild("ClientModels") then
                Workspace.Animals.ClientModels.ChildAdded:Connect(function(child) task.wait(0.08); createBillboardFor(child) end)
                Workspace.Animals.ClientModels.ChildRemoved:Connect(function(child) removeBillboardFor(child) end)
            end
        end)
    else
        for model,_ in pairs(espObjects) do removeBillboardFor(model) end
    end
end)

-- ----------------- Manual Swap -----------------
local swapChannel = espServer:Channel("Manual Swap")
local animalID = ""
swapChannel:Textbox("Animal ID","Enter animal UUID",true,function(val) animalID = val end)
swapChannel:Button("Swap Animal (by ID)", function()
    task.spawn(function()
        if animalID == "" then warn("Enter ID") return end
        pcall(function() ReplicatedStorage:WaitForChild("Remote"):WaitForChild("Animals"):WaitForChild("PlayerSwapAnimal"):FireServer(animalID) end)
        pcall(function() sendWebhookEmbed("Swapped by ID", {{name="Player", value=player.Name}, {name="ID", value=animalID}, {name="Time", value=os.date("%H:%M:%S")}}, 10181046, "KXScript") end)
    end)
end)

-- ----------------- TP & Auto TP + Swap + ragdoll handling -----------------
local teleportChannel = playServer:Channel("Auto TP") -- under Play server
local autoTPswap = false      -- UI toggle state
local autoTPLoopThread = nil
local pausedByRagdoll = false

local ragdollTrigger = nil
pcall(function()
    if Workspace:FindFirstChild("DAMIEN22332233") then
        ragdollTrigger = Workspace.DAMIEN22332233:FindFirstChild("RagdollTrigger")
    end
end)

local function getNearestAnimal()
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return nil end
    local rootPos = player.Character.HumanoidRootPart.Position
    local nearest, minDist = nil, math.huge
    if not Workspace:FindFirstChild("Animals") then return nil end
    local modelsFolder = Workspace.Animals:FindFirstChild("ClientModels")
    if not modelsFolder then return nil end
    for _, model in pairs(modelsFolder:GetChildren()) do
        local part = model:FindFirstChildWhichIsA("BasePart")
        if part then
            local d = (rootPos - part.Position).Magnitude
            if d < minDist then minDist, nearest = d, model end
        end
    end
    return nearest
end

local function TPAndSwap(animalModel)
    task.spawn(function()
        if not animalModel or not animalModel.Parent then return end
        local part = animalModel:FindFirstChildWhichIsA("BasePart")
        local char = player.Character
        if not (part and char) then return end
        local root = char:FindFirstChild("HumanoidRootPart")
        local hum = char:FindFirstChildOfClass("Humanoid")
        if not (root and hum) then return end

        hum.Jump = true
        task.wait(0.08)
        hum.PlatformStand = true
        local anchored = {}
        for _, p in pairs(char:GetChildren()) do
            if p:IsA("BasePart") then anchored[#anchored+1] = p; p.Anchored = true end
        end
        root.CFrame = part.CFrame + Vector3.new(0,3,0)
        task.wait(0.08)
        pcall(function() ReplicatedStorage:WaitForChild("Remote"):WaitForChild("Animals"):WaitForChild("PlayerSwapAnimal"):FireServer(animalModel.Name) end)
        pcall(function() sendWebhookEmbed("Swap Executed", {
            {name="Player", value=player.Name}, {name="Animal", value=animalModel.Name},
            {name="Time", value=os.date("%H:%M:%S")}, {name="Runtime", value=string.format("%02d:%02d:%02d", math.floor((os.time()-startTime)/3600), math.floor((os.time()-startTime)%3600/60), (os.time()-startTime)%60)},
            {name="MoneyGained", value=tostring(totalGained)}
        }, 3066993, "KXScript") end)
        task.wait(0.12)
        hum.PlatformStand = false
        for _, p in ipairs(anchored) do if p and p.Parent then p.Anchored = false end end
    end)
end

local function startAutoTPLoop()
    if autoTPLoopThread then return end
    autoTPLoopThread = task.spawn(function()
        while autoTPswap do
            if ragdollTrigger and ragdollTrigger.Value then
                pausedByRagdoll = true
                pcall(function() sendWebhookEmbed("Ragdoll detected â€” Retry & pause", {
                    {name="Player", value=player.Name},
                    {name="Runtime", value=string.format("%02d:%02d:%02d", math.floor((os.time()-startTime)/3600), math.floor((os.time()-startTime)%3600/60), (os.time()-startTime)%60)},
                    {name="Time", value=os.date("%H:%M:%S")},
                    {name="MoneyGained", value=tostring(totalGained)}
                }, 15105570, "KXScript") end)
                pcall(function() ReplicatedStorage:WaitForChild("Remote"):WaitForChild("Game"):WaitForChild("Retry"):FireServer() end)
                break
            end
            local nearest = getNearestAnimal()
            if nearest then TPAndSwap(nearest) end
            task.wait(0.08)
            if autoTPLoopThread == nil then break end
        end
        autoTPLoopThread = nil
    end)
end

if ragdollTrigger then
    ragdollTrigger.Changed:Connect(function(val)
        if val then
            pausedByRagdoll = true
            autoTPLoopThread = nil
            pcall(function() ReplicatedStorage:WaitForChild("Remote"):WaitForChild("Game"):WaitForChild("Retry"):FireServer() end)
            pcall(function() sendWebhookEmbed("Ragdoll triggered", {
                {name="Player", value=player.Name},
                {name="Runtime", value=string.format("%02d:%02d:%02d", math.floor((os.time()-startTime)/3600), math.floor((os.time()-startTime)%3600/60), (os.time()-startTime)%60)},
                {name="Time", value=os.date("%H:%M:%S")},
                {name="MoneyGained", value=tostring(totalGained)}
            }, 15105570, "KXScript") end)
        else
            if pausedByRagdoll then
                pausedByRagdoll = false
                if autoTPswap then startAutoTPLoop(); pcall(function() sendWebhookEmbed("Ragdoll ended â€” resuming", {{name="Player",value=player.Name}}, 3066993, "KXScript") end) end
            end
        end
    end)
end

teleportChannel:Button("TP + Swap Nearest Animal", function()
    local nearest = getNearestAnimal()
    if nearest then TPAndSwap(nearest) end
end)

teleportChannel:Toggle("Auto TP + Swap Nearest Animal", false, function(state)
    autoTPswap = state
    if state then
        if ragdollTrigger and ragdollTrigger.Value then
            pausedByRagdoll = true
            pcall(function() sendWebhookEmbed("Auto TP requested but ragdoll active â€” will resume later", {{name="Player",value=player.Name}}, 16776960, "KXScript") end)
            return
        end
        startAutoTPLoop()
    else
        autoTPLoopThread = nil
    end
end)

-- ----------------- Admin Screen Label -----------------
pcall(function()
    local adminGui = player:WaitForChild("PlayerGui"):WaitForChild("AdminScreenMessage")
    local label = adminGui:WaitForChild("MessageLabel")
    label.RichText = true
    label.Active = true
    label.Text = "KXScript |[ðŸŽ‰] Raise Animals"
end)

-- ----------------- Speed scanner & apply (UI) -----------------
local miscSpeedChannel = miscServer:Channel("Speed")
local speedCandidates = {}

local function nameLooksLikeSpeed(n)
    n = tostring(n):lower()
    return n:match("speed") or n:match("walk") or n:match("move") or n:match("vel") or n:match("max")
end

local function scanForSpeedSources()
    speedCandidates = {}
    -- player humanoid
    if player.Character then
        local hum = player.Character:FindFirstChildOfClass("Humanoid")
        if hum then table.insert(speedCandidates, {type="Humanoid", instance=hum, desc="Player Humanoid"}) end
    end
    -- humanoids in animals
    local animalsFolder = Workspace:FindFirstChild("Animals")
    if animalsFolder then
        local models = animalsFolder:FindFirstChild("ClientModels") or animalsFolder
        for _, m in pairs(models:GetDescendants()) do
            if m:IsA("Humanoid") then
                table.insert(speedCandidates, {type="Humanoid", instance=m, desc="Animal Humanoid: "..(m.Parent and m.Parent.Name or "")})
            end
        end
    end
    -- numeric values
    local containers = {player.Character or Workspace, ReplicatedStorage, Workspace}
    for _, cont in ipairs(containers) do
        if cont then
            for _, v in pairs(cont:GetDescendants()) do
                if (v:IsA("NumberValue") or v:IsA("IntValue")) and nameLooksLikeSpeed(v.Name) then
                    table.insert(speedCandidates, {type=v.ClassName, instance=v, desc=v:GetFullName()})
                elseif v:IsA("Vector3Value") and nameLooksLikeSpeed(v.Name) then
                    table.insert(speedCandidates, {type="Vector3Value", instance=v, desc=v:GetFullName()})
                elseif v:IsA("BodyVelocity") or v:IsA("VectorForce") or v:IsA("LinearVelocity") then
                    table.insert(speedCandidates, {type=v.ClassName, instance=v, desc=v:GetFullName()})
                end
            end
        end
    end
    -- print
    print("Speed candidates:")
    for i,c in ipairs(speedCandidates) do print(i, c.type, c.desc) end
    return speedCandidates
end

local desiredSpeed = 50
miscSpeedChannel:Button("Scan Speed Candidates", function()
    task.spawn(function()
        scanForSpeedSources()
    end)
end)

miscSpeedChannel:Textbox("Desired Speed", "Number", true, function(txt)
    local n = tonumber(txt)
    if n then desiredSpeed = n end
end)

local function applySpeedToCandidates(targetSpeed)
    task.spawn(function()
        scanForSpeedSources()
        for _, c in ipairs(speedCandidates) do
            pcall(function()
                if c.type == "Humanoid" and c.instance and c.instance.Parent then
                    c.instance.WalkSpeed = targetSpeed
                elseif c.type == "NumberValue" or c.type == "IntValue" then
                    c.instance.Value = targetSpeed
                elseif c.type == "Vector3Value" then
                    c.instance.Value = Vector3.new(targetSpeed, targetSpeed, targetSpeed)
                elseif c.type == "BodyVelocity" then
                    local bv = c.instance
                    bv.MaxForce = Vector3.new(1e5,1e5,1e5)
                    if bv.Velocity.Magnitude > 0 then
                        bv.Velocity = bv.Velocity.Unit * targetSpeed
                    else
                        bv.Velocity = Vector3.new(0,0,targetSpeed)
                    end
                elseif c.type == "LinearVelocity" then
                    local lv = c.instance
                    pcall(function() lv.Velocity = Vector3.new(0,0,targetSpeed) end)
                elseif c.type == "VectorForce" then
                    local vf = c.instance
                    pcall(function() vf.Force = Vector3.new(targetSpeed, targetSpeed, targetSpeed) end)
                else
                    if c.instance and c.instance.SetAttribute then
                        pcall(function() c.instance:SetAttribute("Speed", targetSpeed) end)
                    end
                end
            end)
        end
    end)
end

miscSpeedChannel:Button("Apply Speed to Candidates", function()
    applySpeedToCandidates(desiredSpeed)
end)

miscSpeedChannel:Toggle("Add BodyVelocity Fallback", false, function(state)
    task.spawn(function()
        local char = player.Character
        if not char then return end
        local root = char:FindFirstChild("HumanoidRootPart")
        if not root then return end
        if state then
            if not root:FindFirstChild("KX_BV") then
                local bv = Instance.new("BodyVelocity")
                bv.Name = "KX_BV"
                bv.MaxForce = Vector3.new(1e5,1e5,1e5)
                bv.Velocity = root.CFrame.LookVector * desiredSpeed
                bv.Parent = root
                pcall(function() sendWebhookEmbed("BodyVelocity fallback added", {{name="Player", value=player.Name},{name="Speed", value=tostring(desiredSpeed)}}, 3066993, "KXScript") end)
            end
        else
            pcall(function()
                if root:FindFirstChild("KX_BV") then root.KX_BV:Destroy() end
            end)
        end
    end)
end)

-- ----------------- launch embed -----------------
task.spawn(function()
    pcall(function()
        sendWebhookEmbed(player.Name.." launched KXScript", {
            {name="Player", value=player.Name},
            {name="Time", value=os.date("%Y-%m-%d %H:%M:%S")},
            {name="Runtime", value="00:00:00"},
            {name="MoneyGained", value=tostring(totalGained)}
        }, 3066993, "KXScript")
    end)
end)

-- End of script
print("KXScript loaded: Raise Animals (full, multi-toggle, all features).")
